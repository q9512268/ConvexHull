package de.feu.propra18.q9512268.gui.controller;

import java.net.URL;
import java.util.ResourceBundle;

import de.feu.propra18.q9512268.app.main.MainFacade;
import de.feu.propra18.q9512268.app.objects.Point;
import javafx.beans.binding.Bindings;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.Group;
import javafx.scene.control.ScrollPane;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.scene.shape.Polygon;
import javafx.scene.transform.Scale;

public class MainController implements Initializable {

	private MainFacade FACADE;

	@FXML
	private MenuController menuController;
	@FXML
	private ToolBarController toolBarController;

	@FXML
	private Pane pane;

	@FXML
	private Pane pane_points;

	@FXML
	private ScrollPane scrollpane_points;
	@FXML
	private Group group_points;
	@FXML
	private Group group_points_outer;
	@FXML
	private ScrollPane scrollpane_polygon;
	@FXML
	private Pane pane_polygon;

	private boolean dragging = false;

	Polygon polygon;

	@Override
	public void initialize(URL location, ResourceBundle resources) {

		FACADE = MainFacade.get_Instance();

		initPane();
		initPolygon();
		initPoints();

		toolBarController.setPane(pane);
		menuController.setMainController(this);
	}

	private void initPane() {
		Scale scale = new Scale();
		scale.setX(1);
		scale.setY(-1);
		scale.pivotYProperty().bind(pane.heightProperty().divide(2));
		pane.getTransforms().add(scale);

		pane.addEventHandler(MouseEvent.ANY, (event) -> {

			if (event.getEventType() == MouseEvent.MOUSE_PRESSED) {
				dragging = false;
			} else if (event.getEventType() == MouseEvent.DRAG_DETECTED) {
				dragging = true;
			} else if (event.getEventType() == MouseEvent.MOUSE_DRAGGED) {
				dragging = true;
			} else if (event.getEventType() == MouseEvent.MOUSE_CLICKED) {

				if (!dragging) {

					Point newPoint = new Point(event.getX(), event.getY());
					if (!FACADE.contains_Point(newPoint)) {
						FACADE.add_Point(newPoint);
						FACADE.clear_ConvexHullPoints();
						FACADE.calculate_PointsConvexHull();
					}
				}
			}

		});
	}

	public void initPolygon() {
		polygon = new Polygon();
		polygon.setId("polygon");
		Bindings.bindContent(polygon.getPoints(), FACADE.get_PointsConvexHull());
		pane_polygon.getChildren().add(polygon);
		pane_polygon.prefHeightProperty().bind(pane.heightProperty());
		pane_polygon.toBack();
		scrollpane_polygon.toBack();
	}

	public void clearPolygon() {
		pane_polygon.getChildren().clear();
	}

	private void initPoints() {

		pane_points.prefHeightProperty().bind(pane.heightProperty());
		pane_points.prefWidthProperty().bind(pane.widthProperty());

		Bindings.bindContent(group_points.getChildren(), FACADE.get_PointsAll());
		Bindings.bindContent(group_points_outer.getChildren(), FACADE.get_PointsAllOuter());

		group_points.toFront();
	}

}

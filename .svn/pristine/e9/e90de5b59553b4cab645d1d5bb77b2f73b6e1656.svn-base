package de.feu.propra18.q9512268.app.main.algorithm.circle;

import java.util.ArrayList;
import java.util.List;

import de.feu.propra18.q9512268.app.main.MainFacade;
import javafx.collections.ObservableList;

public final class CircleAlgorithm {

	/**
	 * Private constructor to make sure class is only accessed in a static way.
	 */
	private CircleAlgorithm() {
	}

	public static List<Double> getLargestIncludedCircle() {

		List<Double> circleInformation = new ArrayList<Double>(3);

		ObservableList<Double> currentConvexHullPoints = MainFacade.get_Instance().get_PointsConvexHull();

		if (!currentConvexHullPoints.isEmpty()) {
			circleInformation.add(200.0);
			circleInformation.add(300.0);
			circleInformation.add(100.0);

			return circleInformation;
		}

		throw new NullPointerException("no points available");

	}

}

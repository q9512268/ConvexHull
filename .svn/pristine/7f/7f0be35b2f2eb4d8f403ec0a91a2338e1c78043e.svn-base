package de.feu.propra18.q9512268.app.io;

import java.util.HashSet;

import de.feu.propra18.q9512268.app.main.MainFacade;
import de.feu.propra18.q9512268.app.objects.Point;

/**
 * Final class that provides function to read a 2D array and add new
 * {@link Point} instances to the
 * {@link de.feu.propra18.q9512268.app.main.PointsContainer}.
 * <p/>
 * Can only be accessed in a static way from the {@link IOFacade} class.
 * 
 * @author Christian Luetticke
 * @version 1.0
 */
final class ArrayInput {

	/**
	 * Private constructor to make sure class is only accessed in a static way.
	 */
	private ArrayInput() {
	}

	/**
	 * Sole method that loops through a 2D int array of point coordinates.
	 * <p/>
	 * Reads array, passes created points into a set to eliminate duplicates
	 * and adds all points to the {@link de.feu.propra18.q9512268.app.main.PointsContainer}.
	 * 
	 * @param pointArray
	 *            2D array of x/y coordinates.
	 * @see IOFacade#add_PointsFromArray(int[][])
	 * @see MainFacade#add_Point(int, int)
	 */
	protected static void add_PointsFromArray(int[][] pointArray) {

		HashSet<Point> set = new HashSet<>();

		for (int i = 0; i < pointArray.length; i++) {

			int[] row = pointArray[i];
			Point p = new Point(row[0], row[1]);
			if (p != null) {
				set.add(p);
			}
		}

		for (Point p : set) {
			MainFacade.get_Instance().add_Point(p);
		}

	}

}

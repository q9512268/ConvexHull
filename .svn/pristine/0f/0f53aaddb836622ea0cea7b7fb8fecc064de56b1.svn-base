package de.feu.propra18.q9512268.app.objects;

import de.feu.propra18.q9512268.app.main.MainFacade;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;

class PointDragHandler implements EventHandler<MouseEvent> {

	private double min_x = 0;
	private double min_y = 0;
	private double max_x;
	private double max_y;

	private MainFacade FACADE;
	private Point p;

	@Override
	public void handle(MouseEvent event) {

		this.FACADE = MainFacade.get_Instance();
		this.p = (Point) event.getSource();
		final Group group = (Group) p.getParent();
		final Pane pane_points = (Pane) group.getParent();

		max_x = pane_points.getWidth();
		max_y = pane_points.getHeight();

		if (event.getX() < min_x) {
			setCenterX_setCenterXSibling(min_x);
			testThenSetCenterY(event);
		} else if (event.getX() > max_x) {
			setCenterX_setCenterXSibling(max_x);
			testThenSetCenterY(event);
		} else if (event.getY() < min_y) {
			setCenterY_setCenterYSibling(min_y);
			testThenSetCenterX(event);
		} else if (event.getY() > max_y) {
			setCenterY_setCenterYSibling(max_y);
			testThenSetCenterX(event);

		} else {
			setCenterX_setCenterXSibling(event.getX());
			setCenterY_setCenterYSibling(event.getY());
		}

		FACADE.clear_ConvexHullPoints();
		FACADE.calculate_PointsConvexHull();

	}

	private void setCenterX_setCenterXSibling(double d) {
		p.setCenterX(d);
		p.getSibling().setCenterX(d);
	}

	private void setCenterY_setCenterYSibling(double d) {
		p.setCenterY(d);
		p.getSibling().setCenterY(d);
	}

	private void testThenSetCenterX(MouseEvent event) {
		if (event.getX() > max_x) {
			setCenterX_setCenterXSibling(max_x);
		} else if (event.getX() < min_x) {
			setCenterX_setCenterXSibling(min_x);
		} else {
			p.setCenterX(event.getX());
			p.getSibling().setCenterX(event.getX());
		}
	}

	private void testThenSetCenterY(MouseEvent event) {
		if (event.getY() > max_y) {
			setCenterY_setCenterYSibling(max_y);
		} else if (event.getY() < min_y) {
			setCenterY_setCenterYSibling(min_y);
		} else {
			p.setCenterY(event.getY());
			p.getSibling().setCenterY(event.getY());
		}
	}

}

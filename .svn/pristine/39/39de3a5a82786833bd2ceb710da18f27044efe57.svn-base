package de.feu.propra18.q9512268.app.main;

import java.util.LinkedHashSet;
import java.util.Set;
import java.util.TreeSet;
import java.util.concurrent.CompletableFuture;

import de.feu.propra18.q9512268.app.objects.SimplePoint;

final class HullAlgorithm {

	private HullAlgorithm() {
	}

	public static Set<SimplePoint> getConvexHull() {

		CompletableFuture<TreeSet<SimplePoint>> task1 = CompletableFuture
				.supplyAsync(() -> new ConvexOutlineLeftCalculator().getConvexOutline());
		CompletableFuture<TreeSet<SimplePoint>> task2 = CompletableFuture
				.supplyAsync(() -> new ConvexOutlineRightCalculator().getConvexOutline());

		CompletableFuture<Set<SimplePoint>> result = task1.thenCombine(task2, (left, right) -> {
			Set<SimplePoint> set = new LinkedHashSet<SimplePoint>();
			set.addAll(left);
			set.addAll(right);
			return set;
		});

		return result.join();

	}

}